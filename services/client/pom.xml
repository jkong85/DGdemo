<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>dg-services</artifactId>
        <groupId>com.kj.dg</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>dg-services-client</artifactId>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <docker.daemon.hostname/> <!-- inject into maven build via -Ddocker.daemon.hostname=the.hostname -->
        <docker.daemon.port>2375</docker.daemon.port>
        <docker.daemon.protocol>http</docker.daemon.protocol>
        <docker.daemon.url>${docker.daemon.protocol}://${docker.daemon.hostname}:${docker.daemon.port}
        </docker.daemon.url>

        <docker.registry>docker.io</docker.registry>
        <docker.repository>${docker.registry}/eclipse</docker.repository>
        <docker.image.additional.tag/>
        <docker.image.jdk>docker.io/adoptopenjdk/openjdk8-openj9:jdk8u162-b12_openj9-0.8.0-alpine</docker.image.jdk>
        <docker.image.port>8080</docker.image.port>
    </properties>
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <!-- here the phase you need -->
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/non-packaged-resources</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <shadedArtifactAttached>true</shadedArtifactAttached>
                            <shadedClassifierName>allinone</shadedClassifierName>
                            <artifactSet>
                                <includes>
                                    <include>*:*</include>
                                </includes>
                            </artifactSet>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>**/*.groovy</exclude>
                                        <!-- exclude groovy files so that cf doesn't
                                           think we want to deploy a spring boot cli app -->
                                        <!-- exclude manifest signature files -->
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                        <exclude>LICENSE</exclude>
                                        <exclude>README.md</exclude>
                                        <exclude>META-INF/LICENSE*</exclude>
                                        <exclude>META-INF/NOTICE*</exclude>
                                        <exclude>rootdoc.txt</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <transformers>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>reference.conf</resource>
                                </transformer>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <manifestEntries>
                                        <Main-Class>com.kj.dg.services.client.Client</Main-Class>
                                    </manifestEntries>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.6.0</version>
                <configuration>
                    <executable>java</executable>
                    <arguments>
                        <argument>-classpath</argument>
                        <classpath />
                        <argument>com.kj.dg.services.client.Client</argument>
                    </arguments>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <autoPull>always</autoPull> <!-- always pull latest BaseImage -->
                    <!--<registry>docker.io</registry>-->
                    <pushRegistry>docker.io</pushRegistry>
                    <images>
                        <image>
                            <alias>dg-client</alias>
                            <name>
                                dg-client
                            </name>
                            <build>
                                <from>${docker.image.jdk}</from>
                                <tags>
                                    <tag>${docker.image.additional.tag}</tag>
                                </tags>
                                <ports>
                                    <port>${docker.image.port}</port>
                                </ports>
                                <env>
                                    <HTTP_PORT>${docker.image.port}</HTTP_PORT>
                                    <HOSTING_ENVIRONMENT>Docker</HOSTING_ENVIRONMENT>
                                </env>
                                <workdir>/opt/dg</workdir>
                                <entryPoint>
                                    <exec>
                                        <arg>java</arg>
                                        <arg>-jar</arg>
                                        <arg>/opt/dg/starter.jar</arg>
                                    </exec>
                                </entryPoint>
                                <assembly>
                                    <basedir>/</basedir>
                                    <descriptor>assembly.xml</descriptor>
                                </assembly>
                                <runCmds>
                                    <!-- <runCmd>ln -s /opt/dg/${project.build.finalName}-allinone.jar /opt/dg/starter.jar</runCmd> -->
                                    <runCmd>ln -s /opt/dg/dg-services-client-1.0-SNAPSHOT-allinone.jar /opt/dg/starter.jar</runCmd>
                                    <!--<runCmd>chmod u+x start.sh</runCmd>-->
                                    <!--<runCmd>./start.sh</runCmd>-->
                                </runCmds>
                            </build>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>docker-build-image</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>docker-build-image</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>remove</goal>
                                    <!-- In order to clean up! -->
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>docker-push-image</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>docker-push-image</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>push</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>